Search.setIndex({"docnames": ["api/index", "api/pyqir", "building", "index", "upgrade"], "filenames": ["api/index.md", "api/pyqir.md", "building.md", "index.md", "upgrade.md"], "titles": ["API Reference", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pyqir</span></code>", "Building from Source", "PyQIR", "Upgrading PyQIR"], "terms": {"pyqir": [0, 2], "arraytyp": [0, 1], "attribut": [0, 1], "attributelist": [0, 1], "attributeset": [0, 1], "basicblock": [0, 1], "basicqisbuild": [0, 1], "builder": [0, 1], "call": [0, 1, 4], "constant": [0, 1, 4], "constantasmetadata": [0, 1], "context": [0, 1, 4], "fcmp": [0, 1, 4], "floatconst": [0, 1], "floatpred": [0, 1], "function": [0, 1], "functiontyp": [0, 1, 4], "icmp": [0, 1, 4], "instruct": [0, 1], "intconst": [0, 1], "intpred": [0, 1], "inttyp": [0, 1, 4], "linkag": [0, 1], "metadata": [0, 1], "metadatastr": [0, 1], "modul": [0, 1, 2, 3], "moduleflagbehavior": [0, 1], "opcod": [0, 1, 4], "phi": [0, 1, 4], "pointertyp": [0, 1], "simplemodul": [0, 1, 4], "structtyp": [0, 1], "switch": [0, 1, 4], "type": [0, 1], "valu": [0, 1, 4], "add_string_attribut": [0, 1], "const": [0, 1], "dynamic_qubit_manag": [0, 1], "dynamic_result_manag": [0, 1], "entry_point": [0, 1, 4], "extract_byte_str": [0, 1, 4], "global_byte_str": [0, 1], "is_entry_point": [0, 1, 4], "is_interop_friendli": [0, 1, 4], "is_qubit_typ": [0, 1], "is_result_typ": [0, 1], "qir_major_vers": [0, 1], "qir_minor_vers": [0, 1], "qir_modul": [0, 1], "qubit": [0, 1], "qubit_id": [0, 1, 4], "qubit_typ": [0, 1, 4], "required_num_qubit": [0, 1], "required_num_result": [0, 1], "result": [0, 1], "result_id": [0, 1, 4], "result_typ": [0, 1, 4], "class": [1, 4], "base": [1, 4], "an": [1, 2, 4], "arrai": 1, "count": 1, "The": [1, 2, 4], "number": 1, "element": 1, "int": [1, 4], "object": [1, 4], "string_kind": 1, "id": 1, "thi": [1, 2, 4], "string": 1, "str": [1, 4], "string_valu": 1, "none": [1, 4], "i": [1, 2, 4], "option": 1, "list": [1, 4], "func": 1, "itself": 1, "attributedict": 1, "param": [1, 4], "n": 1, "paramet": 1, "start": 1, "from": [1, 3, 4], "zero": 1, "return": [1, 4], "ret": [1, 4], "A": 1, "set": [1, 2], "specif": [1, 2], "part": 1, "basic": [1, 4], "block": [1, 4], "If": [1, 2, 4], "befor": [1, 4], "given": 1, "insert": 1, "directli": [1, 2, 4], "parent": 1, "must": [1, 2], "append": 1, "end": 1, "llvm": [1, 4], "name": [1, 4], "termin": [1, 4], "one": [1, 2, 4], "gener": [1, 2, 3], "quantum": [1, 3], "cx": 1, "control": [1, 4], "target": [1, 2], "pauli": 1, "x": 1, "gate": 1, "cz": 1, "z": 1, "h": 1, "hadamard": 1, "if_result": 1, "cond": 1, "callabl": 1, "lambda": 1, "branch": 1, "condit": 1, "measur": 1, "when": 1, "should": [1, 2, 4], "us": [1, 2, 3, 4], "": [1, 2], "build": [1, 3], "where": 1, "mz": 1, "basi": 1, "oper": 1, "written": 1, "reset": 1, "rx": 1, "theta": 1, "float": 1, "rotat": 1, "about": 1, "axi": 1, "angl": 1, "ry": 1, "y": [1, 2], "rz": 1, "s_adj": 1, "adjoint": 1, "t": [1, 4], "t_adj": 1, "add": 1, "lh": 1, "rh": 1, "addit": 1, "left": 1, "hand": 1, "side": 1, "right": [1, 4], "sum": 1, "and_": 1, "bitwis": 1, "logic": 1, "br": [1, 4], "uncondit": 1, "dest": 1, "destin": 1, "calle": 1, "arg": [1, 2], "sequenc": 1, "union": 1, "bool": [1, 4], "argument": 1, "ha": [1, 2, 4], "void": [1, 4], "condbr": 1, "else_": 1, "1": [1, 2, 4], "els": 1, "0": [1, 2], "pred": 1, "integ": 1, "comparison": 1, "predic": 1, "compar": [1, 4], "boolean": 1, "if_": 1, "true": 1, "fals": 1, "insert_at_end": 1, "tell": 1, "subsequ": 1, "lshr": 1, "fill": 1, "shift": 1, "bit": [1, 3], "mul": 1, "multipl": 1, "product": 1, "or_": 1, "node": 1, "shl": 1, "sub": 1, "subtract": 1, "differ": [1, 4], "xor": 1, "exclus": 1, "being": 1, "is_nul": 1, "whether": 1, "null": 1, "its": [1, 2, 4], "static": [1, 4], "ty": 1, "creat": [1, 4], "own": 1, "global": [1, 4], "state": 1, "need": [1, 3, 4], "most": [1, 3, 4], "point": 1, "oeq": 1, "og": 1, "ogt": 1, "ol": 1, "olt": 1, "ONE": 1, "ord": 1, "ueq": 1, "ug": 1, "ugt": 1, "ul": 1, "ult": 1, "un": 1, "uno": 1, "kind": [1, 4], "basic_block": 1, "eras": 1, "remov": [1, 4], "delet": 1, "memori": 1, "after": [1, 2, 4], "undefin": 1, "behavior": [1, 2], "operand": [1, 4], "successor": [1, 4], "ar": [1, 3, 4], "empti": 1, "eq": 1, "ne": 1, "sge": 1, "sgt": 1, "sle": 1, "slt": 1, "width": [1, 4], "available_extern": 1, "common": 1, "extern": [1, 4], "external_weak": 1, "intern": 1, "link_once_ani": 1, "link_once_odr": 1, "privat": 1, "weak_ani": 1, "weak_odr": 1, "underli": 1, "collect": 1, "add_flag": 1, "flag": 1, "see": [1, 2, 4], "http": 1, "org": [1, 2], "doc": 1, "langref": 1, "html": 1, "specifi": [1, 2], "two": [1, 3, 4], "more": [1, 2, 4], "merg": 1, "togeth": 1, "uniqu": 1, "bitcod": 1, "byte": 1, "from_bitcod": [1, 4], "from_ir": [1, 4], "ir": 1, "declar": 1, "get_flag": 1, "get": [1, 2, 4], "found": 1, "otherwis": [1, 4], "source_filenam": [1, 4], "origin": 1, "sourc": [1, 3, 4], "file": 1, "wa": [1, 4], "compil": [1, 2], "verifi": 1, "valid": 1, "error": 1, "descript": 1, "invalid": 1, "choic": 1, "append_uniqu": 1, "max": 1, "overrid": 1, "requir": [1, 4], "warn": 1, "addr_space_cast": 1, "alloca": 1, "AND": 1, "ashr": 1, "atomic_cmp_xchg": 1, "atomic_rmw": 1, "bit_cast": 1, "call_br": 1, "catch_pad": 1, "catch_ret": 1, "catch_switch": 1, "cleanup_pad": 1, "cleanup_ret": 1, "extract_el": 1, "extract_valu": 1, "fadd": 1, "fdiv": 1, "fenc": 1, "fmul": 1, "fneg": 1, "fp_ext": 1, "fp_to_si": 1, "fp_to_ui": 1, "fp_trunc": 1, "freez": 1, "frem": 1, "fsub": 1, "get_element_ptr": 1, "indirect_br": 1, "insert_el": 1, "insert_valu": 1, "int_to_ptr": 1, "invok": 1, "landing_pad": 1, "load": 1, "OR": 1, "ptr_to_int": 1, "resum": 1, "sdiv": 1, "select": 1, "sext": 1, "shuffle_vector": 1, "si_to_fp": 1, "srem": 1, "store": 1, "trunc": 1, "udiv": 1, "ui_to_fp": 1, "unreach": 1, "urem": 1, "user_op_1": 1, "user_op_2": 1, "va_arg": 1, "zext": 1, "add_incom": 1, "incom": 1, "preced": 1, "tupl": 1, "pointer": 1, "pointe": 1, "address_spac": 1, "address": 1, "space": 1, "num_qubit": [1, 4], "num_result": [1, 4], "entry_point_nam": 1, "main": 1, "simpl": 1, "repres": 1, "qir": [1, 3, 4], "program": [1, 4], "follow": [1, 2, 4], "assumpt": 1, "all": [1, 2, 4], "alloc": 1, "There": [1, 2, 3, 4], "exactli": 1, "link": [1, 2, 4], "which": [1, 2, 4], "entri": 1, "add_byte_str": 1, "without": 1, "add_external_funct": 1, "emit": 1, "properti": [1, 4], "entry_block": 1, "first": [1, 4], "automat": [1, 2], "plain": 1, "text": 1, "index": 1, "numer": 1, "structur": 1, "field": 1, "anonym": 1, "case": [1, 4], "default": [1, 2], "match": 1, "doubl": [1, 4], "is_doubl": 1, "is_void": 1, "kei": 1, "support": [1, 4], "dynam": 1, "manag": 1, "unspecifi": 1, "qir_profil": 1, "custom": 1, "output_labeling_schema": 1, "identifi": 1, "profil": 1, "been": [1, 4], "base_profil": 1, "compliant": 1, "arbitrari": 1, "schema": 1, "frontend": 1, "produc": 1, "label": 1, "record": 1, "output": 1, "extract": [1, 4], "interop": 1, "friendli": 1, "major": 1, "version": [1, 2, 4], "built": [1, 3], "minor": 1, "rust": 2, "64": [2, 3], "python": [2, 3], "3": [2, 3], "7": [2, 3], "powershel": 2, "core": 2, "13": 2, "cmake": 2, "10": [2, 3], "either": 2, "highli": 2, "recommend": 2, "sccach": 2, "ccach": 2, "lib": 2, "sudo": 2, "apt": 2, "python3": 2, "dev": 2, "pip": [2, 3], "m": [2, 4], "user": 2, "u": 2, "maturin": 2, "rustup": 2, "make": [2, 3, 4], "sure": 2, "ad": 2, "path": 2, "miniconda": 2, "In": [2, 4], "command": 2, "prompt": 2, "brew": 2, "9": [2, 3], "you": [2, 3, 4], "can": [2, 3, 4], "manual": 2, "22": [2, 3], "04": [2, 3], "updat": 2, "lldb": 2, "lld": 2, "11": [2, 3], "clangd": 2, "tidi": 2, "essenti": 2, "download": 2, "win64": 2, "ex": 2, "releas": 2, "page": 2, "onli": [2, 4], "contain": [2, 4], "compon": 2, "preinstal": 2, "script": 2, "toolchain": 2, "detail": 2, "section": 2, "To": [2, 4], "initi": 2, "your": 2, "solut": 2, "run": [2, 3, 4], "ps1": 2, "qirlib": 2, "depend": 2, "appropri": 2, "below": 2, "instead": [2, 3, 4], "wai": [2, 4], "chang": [2, 4], "within": 2, "each": 2, "project": 2, "folder": 2, "For": [2, 4], "ani": [2, 4], "via": [2, 4], "featur": 2, "thei": [2, 4], "cargo": 2, "extra": 2, "placehold": 2, "llvm11": 2, "llvm12": 2, "llvm13": 2, "llvm14": 2, "crate": 2, "pass": [2, 4], "help": 2, "view": [2, 4], "current": 2, "virtualenv": 2, "pytest": 2, "test": [2, 4], "do": [2, 4], "wish": 2, "wheel": 2, "cdylib": 2, "mode": 2, "those": 2, "consum": 2, "refer": [2, 4], "readm": 2, "constraint": 2, "appli": 2, "alreadi": 2, "prior": 2, "look": [2, 4], "locat": 2, "order": 2, "exist": [2, 3], "allow": 2, "afterward": 2, "configur": 2, "llvm_sys_": 2, "_prefix": 2, "accord": 2, "what": [2, 4], "rest": 2, "abi": 2, "easi": 3, "work": 3, "intermedi": 3, "represent": 3, "pars": [3, 4], "evalu": [3, 4], "new": [3, 4], "ones": 3, "also": [3, 4], "x86": 3, "newer": 3, "guarante": 3, "we": 3, "publish": 3, "offici": 3, "binari": 3, "them": 3, "like": 3, "mai": 3, "compat": 3, "ubuntu": 3, "20": 3, "debian": 3, "maco": 3, "window": 3, "server": 3, "2019": 3, "12": 3, "15": 3, "last": 4, "simul": 4, "now": 4, "avail": 4, "runner": 4, "spars": 4, "6": 4, "three": 4, "metapackag": 4, "singl": 4, "previou": 4, "import": 4, "same": 4, "equival": 4, "api": 4, "still": 4, "under": 4, "bitcode_to_ir": 4, "ir_to_bitcod": 4, "were": 4, "becaus": 4, "both": 4, "module_nam": 4, "Or": 4, "filenam": 4, "describ": 4, "yourself": 4, "But": 4, "give": 4, "unifi": 4, "code": 4, "design": 4, "much": 4, "power": 4, "enabl": 4, "workflow": 4, "involv": 4, "inspect": 4, "transform": 4, "mean": 4, "had": 4, "complet": 4, "redesign": 4, "unfortun": 4, "challeng": 4, "here": 4, "some": 4, "tip": 4, "qirmodul": 4, "constructor": 4, "entrypoint_func": 4, "interop_func": 4, "get_funcs_by_attr": 4, "filter": 4, "next": 4, "hierarchi": 4, "trim": 4, "down": 4, "significantli": 4, "subclass": 4, "qirinstr": 4, "surviv": 4, "other": 4, "possibl": 4, "anyth": 4, "previous": 4, "check": 4, "read": 4, "subset": 4, "just": 4, "flow": 4, "have": 4, "term": 4, "qirqubitconst": 4, "qirresultconst": 4, "qiroperand": 4, "try": 4, "isn": 4, "could": 4, "get_global_bytes_valu": 4, "how": 4, "take": 4, "test_pars": 4, "py": 4, "test_parser_api": 4, "old": 4}, "objects": {"": [[1, 0, 0, "-", "pyqir"]], "pyqir": [[1, 1, 1, "", "ArrayType"], [1, 1, 1, "", "Attribute"], [1, 1, 1, "", "AttributeList"], [1, 1, 1, "", "AttributeSet"], [1, 1, 1, "", "BasicBlock"], [1, 1, 1, "", "BasicQisBuilder"], [1, 1, 1, "", "Builder"], [1, 1, 1, "", "Call"], [1, 1, 1, "", "Constant"], [1, 1, 1, "", "ConstantAsMetadata"], [1, 1, 1, "", "Context"], [1, 1, 1, "", "FCmp"], [1, 1, 1, "", "FloatConstant"], [1, 1, 1, "", "FloatPredicate"], [1, 1, 1, "", "Function"], [1, 1, 1, "", "FunctionType"], [1, 1, 1, "", "ICmp"], [1, 1, 1, "", "Instruction"], [1, 1, 1, "", "IntConstant"], [1, 1, 1, "", "IntPredicate"], [1, 1, 1, "", "IntType"], [1, 1, 1, "", "Linkage"], [1, 1, 1, "", "Metadata"], [1, 1, 1, "", "MetadataString"], [1, 1, 1, "", "Module"], [1, 1, 1, "", "ModuleFlagBehavior"], [1, 1, 1, "", "Opcode"], [1, 1, 1, "", "Phi"], [1, 1, 1, "", "PointerType"], [1, 1, 1, "", "SimpleModule"], [1, 1, 1, "", "StructType"], [1, 1, 1, "", "Switch"], [1, 1, 1, "", "Type"], [1, 1, 1, "", "Value"], [1, 5, 1, "", "add_string_attribute"], [1, 5, 1, "", "const"], [1, 5, 1, "", "dynamic_qubit_management"], [1, 5, 1, "", "dynamic_result_management"], [1, 5, 1, "", "entry_point"], [1, 5, 1, "", "extract_byte_string"], [1, 5, 1, "", "global_byte_string"], [1, 5, 1, "", "is_entry_point"], [1, 5, 1, "", "is_interop_friendly"], [1, 5, 1, "", "is_qubit_type"], [1, 5, 1, "", "is_result_type"], [1, 5, 1, "", "qir_major_version"], [1, 5, 1, "", "qir_minor_version"], [1, 5, 1, "", "qir_module"], [1, 5, 1, "", "qubit"], [1, 5, 1, "", "qubit_id"], [1, 5, 1, "", "qubit_type"], [1, 5, 1, "", "required_num_qubits"], [1, 5, 1, "", "required_num_results"], [1, 5, 1, "", "result"], [1, 5, 1, "", "result_id"], [1, 5, 1, "", "result_type"]], "pyqir.ArrayType": [[1, 2, 1, "", "count"], [1, 2, 1, "", "element"]], "pyqir.Attribute": [[1, 2, 1, "", "string_kind"], [1, 2, 1, "", "string_value"]], "pyqir.AttributeList": [[1, 2, 1, "", "func"], [1, 3, 1, "", "param"], [1, 2, 1, "", "ret"]], "pyqir.BasicBlock": [[1, 2, 1, "", "instructions"], [1, 2, 1, "", "terminator"]], "pyqir.BasicQisBuilder": [[1, 3, 1, "", "cx"], [1, 3, 1, "", "cz"], [1, 3, 1, "", "h"], [1, 3, 1, "", "if_result"], [1, 3, 1, "", "mz"], [1, 3, 1, "", "reset"], [1, 3, 1, "", "rx"], [1, 3, 1, "", "ry"], [1, 3, 1, "", "rz"], [1, 3, 1, "", "s"], [1, 3, 1, "", "s_adj"], [1, 3, 1, "", "t"], [1, 3, 1, "", "t_adj"], [1, 3, 1, "", "x"], [1, 3, 1, "", "y"], [1, 3, 1, "", "z"]], "pyqir.Builder": [[1, 3, 1, "", "add"], [1, 3, 1, "", "and_"], [1, 3, 1, "", "br"], [1, 3, 1, "", "call"], [1, 3, 1, "", "condbr"], [1, 3, 1, "", "icmp"], [1, 3, 1, "", "if_"], [1, 3, 1, "", "insert_at_end"], [1, 3, 1, "", "lshr"], [1, 3, 1, "", "mul"], [1, 3, 1, "", "or_"], [1, 3, 1, "", "phi"], [1, 3, 1, "", "ret"], [1, 3, 1, "", "shl"], [1, 3, 1, "", "sub"], [1, 3, 1, "", "xor"]], "pyqir.Call": [[1, 2, 1, "", "args"], [1, 2, 1, "", "callee"]], "pyqir.Constant": [[1, 2, 1, "", "is_null"], [1, 3, 1, "", "null"]], "pyqir.ConstantAsMetadata": [[1, 2, 1, "", "value"]], "pyqir.FCmp": [[1, 2, 1, "", "predicate"]], "pyqir.FloatConstant": [[1, 2, 1, "", "value"]], "pyqir.FloatPredicate": [[1, 2, 1, "", "FALSE"], [1, 2, 1, "", "OEQ"], [1, 2, 1, "", "OGE"], [1, 2, 1, "", "OGT"], [1, 2, 1, "", "OLE"], [1, 2, 1, "", "OLT"], [1, 2, 1, "", "ONE"], [1, 2, 1, "", "ORD"], [1, 2, 1, "", "TRUE"], [1, 2, 1, "", "UEQ"], [1, 2, 1, "", "UGE"], [1, 2, 1, "", "UGT"], [1, 2, 1, "", "ULE"], [1, 2, 1, "", "ULT"], [1, 2, 1, "", "UNE"], [1, 2, 1, "", "UNO"]], "pyqir.Function": [[1, 2, 1, "", "attributes"], [1, 2, 1, "", "basic_blocks"], [1, 2, 1, "", "params"], [1, 2, 1, "", "type"]], "pyqir.FunctionType": [[1, 2, 1, "", "params"], [1, 2, 1, "", "ret"]], "pyqir.ICmp": [[1, 2, 1, "", "predicate"]], "pyqir.Instruction": [[1, 3, 1, "", "erase"], [1, 2, 1, "", "opcode"], [1, 2, 1, "", "operands"], [1, 2, 1, "", "successors"]], "pyqir.IntConstant": [[1, 2, 1, "", "value"]], "pyqir.IntPredicate": [[1, 2, 1, "", "EQ"], [1, 2, 1, "", "NE"], [1, 2, 1, "", "SGE"], [1, 2, 1, "", "SGT"], [1, 2, 1, "", "SLE"], [1, 2, 1, "", "SLT"], [1, 2, 1, "", "UGE"], [1, 2, 1, "", "UGT"], [1, 2, 1, "", "ULE"], [1, 2, 1, "", "ULT"]], "pyqir.IntType": [[1, 2, 1, "", "width"]], "pyqir.Linkage": [[1, 2, 1, "", "APPENDING"], [1, 2, 1, "", "AVAILABLE_EXTERNALLY"], [1, 2, 1, "", "COMMON"], [1, 2, 1, "", "EXTERNAL"], [1, 2, 1, "", "EXTERNAL_WEAK"], [1, 2, 1, "", "INTERNAL"], [1, 2, 1, "", "LINK_ONCE_ANY"], [1, 2, 1, "", "LINK_ONCE_ODR"], [1, 2, 1, "", "PRIVATE"], [1, 2, 1, "", "WEAK_ANY"], [1, 2, 1, "", "WEAK_ODR"]], "pyqir.MetadataString": [[1, 2, 1, "", "value"]], "pyqir.Module": [[1, 3, 1, "", "add_flag"], [1, 2, 1, "", "bitcode"], [1, 2, 1, "", "context"], [1, 3, 1, "", "from_bitcode"], [1, 3, 1, "", "from_ir"], [1, 2, 1, "", "functions"], [1, 3, 1, "", "get_flag"], [1, 2, 1, "", "source_filename"], [1, 3, 1, "", "verify"]], "pyqir.ModuleFlagBehavior": [[1, 2, 1, "", "APPEND"], [1, 2, 1, "", "APPEND_UNIQUE"], [1, 2, 1, "", "ERROR"], [1, 2, 1, "", "MAX"], [1, 2, 1, "", "OVERRIDE"], [1, 2, 1, "", "REQUIRE"], [1, 2, 1, "", "WARNING"]], "pyqir.Opcode": [[1, 2, 1, "", "ADD"], [1, 2, 1, "", "ADDR_SPACE_CAST"], [1, 2, 1, "", "ALLOCA"], [1, 2, 1, "", "AND"], [1, 2, 1, "", "ASHR"], [1, 2, 1, "", "ATOMIC_CMP_XCHG"], [1, 2, 1, "", "ATOMIC_RMW"], [1, 2, 1, "", "BIT_CAST"], [1, 2, 1, "", "BR"], [1, 2, 1, "", "CALL"], [1, 2, 1, "", "CALL_BR"], [1, 2, 1, "", "CATCH_PAD"], [1, 2, 1, "", "CATCH_RET"], [1, 2, 1, "", "CATCH_SWITCH"], [1, 2, 1, "", "CLEANUP_PAD"], [1, 2, 1, "", "CLEANUP_RET"], [1, 2, 1, "", "EXTRACT_ELEMENT"], [1, 2, 1, "", "EXTRACT_VALUE"], [1, 2, 1, "", "FADD"], [1, 2, 1, "", "FCMP"], [1, 2, 1, "", "FDIV"], [1, 2, 1, "", "FENCE"], [1, 2, 1, "", "FMUL"], [1, 2, 1, "", "FNEG"], [1, 2, 1, "", "FP_EXT"], [1, 2, 1, "", "FP_TO_SI"], [1, 2, 1, "", "FP_TO_UI"], [1, 2, 1, "", "FP_TRUNC"], [1, 2, 1, "", "FREEZE"], [1, 2, 1, "", "FREM"], [1, 2, 1, "", "FSUB"], [1, 2, 1, "", "GET_ELEMENT_PTR"], [1, 2, 1, "", "ICMP"], [1, 2, 1, "", "INDIRECT_BR"], [1, 2, 1, "", "INSERT_ELEMENT"], [1, 2, 1, "", "INSERT_VALUE"], [1, 2, 1, "", "INT_TO_PTR"], [1, 2, 1, "", "INVOKE"], [1, 2, 1, "", "LANDING_PAD"], [1, 2, 1, "", "LOAD"], [1, 2, 1, "", "LSHR"], [1, 2, 1, "", "MUL"], [1, 2, 1, "", "OR"], [1, 2, 1, "", "PHI"], [1, 2, 1, "", "PTR_TO_INT"], [1, 2, 1, "", "RESUME"], [1, 2, 1, "", "RET"], [1, 2, 1, "", "SDIV"], [1, 2, 1, "", "SELECT"], [1, 2, 1, "", "SEXT"], [1, 2, 1, "", "SHL"], [1, 2, 1, "", "SHUFFLE_VECTOR"], [1, 2, 1, "", "SI_TO_FP"], [1, 2, 1, "", "SREM"], [1, 2, 1, "", "STORE"], [1, 2, 1, "", "SUB"], [1, 2, 1, "", "SWITCH"], [1, 2, 1, "", "TRUNC"], [1, 2, 1, "", "UDIV"], [1, 2, 1, "", "UI_TO_FP"], [1, 2, 1, "", "UNREACHABLE"], [1, 2, 1, "", "UREM"], [1, 2, 1, "", "USER_OP_1"], [1, 2, 1, "", "USER_OP_2"], [1, 2, 1, "", "VA_ARG"], [1, 2, 1, "", "XOR"], [1, 2, 1, "", "ZEXT"]], "pyqir.Phi": [[1, 3, 1, "", "add_incoming"], [1, 2, 1, "", "incoming"]], "pyqir.PointerType": [[1, 2, 1, "", "address_space"], [1, 2, 1, "", "pointee"]], "pyqir.SimpleModule": [[1, 3, 1, "", "add_byte_string"], [1, 3, 1, "", "add_external_function"], [1, 3, 1, "", "bitcode"], [1, 4, 1, "", "builder"], [1, 4, 1, "", "context"], [1, 4, 1, "", "entry_block"], [1, 4, 1, "", "entry_point"], [1, 3, 1, "", "ir"], [1, 4, 1, "", "qubits"], [1, 4, 1, "", "results"]], "pyqir.StructType": [[1, 2, 1, "", "fields"], [1, 2, 1, "", "name"]], "pyqir.Switch": [[1, 2, 1, "", "cases"], [1, 2, 1, "", "cond"], [1, 2, 1, "", "default"]], "pyqir.Type": [[1, 3, 1, "", "double"], [1, 2, 1, "", "is_double"], [1, 2, 1, "", "is_void"], [1, 3, 1, "", "void"]], "pyqir.Value": [[1, 2, 1, "", "name"], [1, 2, 1, "", "type"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "pyqir": [1, 3, 4], "build": 2, "from": 2, "sourc": 2, "local": 2, "environ": 2, "requir": 2, "option": 2, "linux": 2, "ubuntu": 2, "window": 2, "maco": 2, "instal": [2, 3], "clang": 2, "ninja": 2, "llvm": 2, "develop": 2, "variabl": 2, "packag": [2, 4], "support": 3, "system": 3, "tier": 3, "1": 3, "2": 3, "upgrad": 4, "0": 4, "8": 4, "7": 4, "gener": 4, "ir": 4, "bitcod": 4, "convers": 4, "type": 4, "parser": 4, "modul": 4, "entri": 4, "point": 4, "interop": 4, "friendli": 4, "function": 4, "instruct": 4, "qubit": 4, "result": 4, "id": 4, "string": 4, "exampl": 4}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "pyqir": [[1, "module-pyqir"]], "Building from Source": [[2, "building-from-source"]], "Local Environment": [[2, "local-environment"]], "Requirements": [[2, "requirements"]], "Optional": [[2, "optional"]], "Linux (Ubuntu)": [[2, "linux-ubuntu"]], "Windows": [[2, "windows"]], "MacOS": [[2, "macos"]], "Installing Clang and Ninja": [[2, "installing-clang-and-ninja"]], "Installing LLVM": [[2, "installing-llvm"]], "Development": [[2, "development"]], "Environment Variables": [[2, "environment-variables"]], "Packaging": [[2, "packaging"]], "PyQIR": [[3, "pyqir"]], "Installation": [[3, "installation"]], "Supported Systems": [[3, "supported-systems"]], "Tier 1": [[3, "tier-1"]], "Tier 2": [[3, "tier-2"]], "Upgrading PyQIR": [[4, "upgrading-pyqir"]], "PyQIR 0.8": [[4, "pyqir-0-8"]], "PyQIR 0.7": [[4, "pyqir-0-7"]], "Packages": [[4, "packages"]], "Generator": [[4, "generator"]], "IR and bitcode conversion": [[4, "ir-and-bitcode-conversion"]], "Types": [[4, "types"]], "Parser": [[4, "parser"]], "Modules": [[4, "modules"]], "Entry points and interop-friendly functions": [[4, "entry-points-and-interop-friendly-functions"]], "Instructions": [[4, "instructions"]], "Qubit and result IDs": [[4, "qubit-and-result-ids"]], "Strings": [[4, "strings"]], "Examples": [[4, "examples"]]}, "indexentries": {"add (pyqir.opcode attribute)": [[1, "pyqir.Opcode.ADD"]], "addr_space_cast (pyqir.opcode attribute)": [[1, "pyqir.Opcode.ADDR_SPACE_CAST"]], "alloca (pyqir.opcode attribute)": [[1, "pyqir.Opcode.ALLOCA"]], "and (pyqir.opcode attribute)": [[1, "pyqir.Opcode.AND"]], "append (pyqir.moduleflagbehavior attribute)": [[1, "pyqir.ModuleFlagBehavior.APPEND"]], "appending (pyqir.linkage attribute)": [[1, "pyqir.Linkage.APPENDING"]], "append_unique (pyqir.moduleflagbehavior attribute)": [[1, "pyqir.ModuleFlagBehavior.APPEND_UNIQUE"]], "ashr (pyqir.opcode attribute)": [[1, "pyqir.Opcode.ASHR"]], "atomic_cmp_xchg (pyqir.opcode attribute)": [[1, "pyqir.Opcode.ATOMIC_CMP_XCHG"]], "atomic_rmw (pyqir.opcode attribute)": [[1, "pyqir.Opcode.ATOMIC_RMW"]], "available_externally (pyqir.linkage attribute)": [[1, "pyqir.Linkage.AVAILABLE_EXTERNALLY"]], "arraytype (class in pyqir)": [[1, "pyqir.ArrayType"]], "attribute (class in pyqir)": [[1, "pyqir.Attribute"]], "attributelist (class in pyqir)": [[1, "pyqir.AttributeList"]], "attributeset (class in pyqir)": [[1, "pyqir.AttributeSet"]], "bit_cast (pyqir.opcode attribute)": [[1, "pyqir.Opcode.BIT_CAST"]], "br (pyqir.opcode attribute)": [[1, "pyqir.Opcode.BR"]], "basicblock (class in pyqir)": [[1, "pyqir.BasicBlock"]], "basicqisbuilder (class in pyqir)": [[1, "pyqir.BasicQisBuilder"]], "builder (class in pyqir)": [[1, "pyqir.Builder"]], "call (pyqir.opcode attribute)": [[1, "pyqir.Opcode.CALL"]], "call_br (pyqir.opcode attribute)": [[1, "pyqir.Opcode.CALL_BR"]], "catch_pad (pyqir.opcode attribute)": [[1, "pyqir.Opcode.CATCH_PAD"]], "catch_ret (pyqir.opcode attribute)": [[1, "pyqir.Opcode.CATCH_RET"]], "catch_switch (pyqir.opcode attribute)": [[1, "pyqir.Opcode.CATCH_SWITCH"]], "cleanup_pad (pyqir.opcode attribute)": [[1, "pyqir.Opcode.CLEANUP_PAD"]], "cleanup_ret (pyqir.opcode attribute)": [[1, "pyqir.Opcode.CLEANUP_RET"]], "common (pyqir.linkage attribute)": [[1, "pyqir.Linkage.COMMON"]], "call (class in pyqir)": [[1, "pyqir.Call"]], "constant (class in pyqir)": [[1, "pyqir.Constant"]], "constantasmetadata (class in pyqir)": [[1, "pyqir.ConstantAsMetadata"]], "context (class in pyqir)": [[1, "pyqir.Context"]], "eq (pyqir.intpredicate attribute)": [[1, "pyqir.IntPredicate.EQ"]], "error (pyqir.moduleflagbehavior attribute)": [[1, "pyqir.ModuleFlagBehavior.ERROR"]], "external (pyqir.linkage attribute)": [[1, "pyqir.Linkage.EXTERNAL"]], "external_weak (pyqir.linkage attribute)": [[1, "pyqir.Linkage.EXTERNAL_WEAK"]], "extract_element (pyqir.opcode attribute)": [[1, "pyqir.Opcode.EXTRACT_ELEMENT"]], "extract_value (pyqir.opcode attribute)": [[1, "pyqir.Opcode.EXTRACT_VALUE"]], "fadd (pyqir.opcode attribute)": [[1, "pyqir.Opcode.FADD"]], "false (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.FALSE"]], "fcmp (pyqir.opcode attribute)": [[1, "pyqir.Opcode.FCMP"]], "fcmp (class in pyqir)": [[1, "pyqir.FCmp"]], "fdiv (pyqir.opcode attribute)": [[1, "pyqir.Opcode.FDIV"]], "fence (pyqir.opcode attribute)": [[1, "pyqir.Opcode.FENCE"]], "fmul (pyqir.opcode attribute)": [[1, "pyqir.Opcode.FMUL"]], "fneg (pyqir.opcode attribute)": [[1, "pyqir.Opcode.FNEG"]], "fp_ext (pyqir.opcode attribute)": [[1, "pyqir.Opcode.FP_EXT"]], "fp_to_si (pyqir.opcode attribute)": [[1, "pyqir.Opcode.FP_TO_SI"]], "fp_to_ui (pyqir.opcode attribute)": [[1, "pyqir.Opcode.FP_TO_UI"]], "fp_trunc (pyqir.opcode attribute)": [[1, "pyqir.Opcode.FP_TRUNC"]], "freeze (pyqir.opcode attribute)": [[1, "pyqir.Opcode.FREEZE"]], "frem (pyqir.opcode attribute)": [[1, "pyqir.Opcode.FREM"]], "fsub (pyqir.opcode attribute)": [[1, "pyqir.Opcode.FSUB"]], "floatconstant (class in pyqir)": [[1, "pyqir.FloatConstant"]], "floatpredicate (class in pyqir)": [[1, "pyqir.FloatPredicate"]], "function (class in pyqir)": [[1, "pyqir.Function"]], "functiontype (class in pyqir)": [[1, "pyqir.FunctionType"]], "get_element_ptr (pyqir.opcode attribute)": [[1, "pyqir.Opcode.GET_ELEMENT_PTR"]], "icmp (pyqir.opcode attribute)": [[1, "pyqir.Opcode.ICMP"]], "icmp (class in pyqir)": [[1, "pyqir.ICmp"]], "indirect_br (pyqir.opcode attribute)": [[1, "pyqir.Opcode.INDIRECT_BR"]], "insert_element (pyqir.opcode attribute)": [[1, "pyqir.Opcode.INSERT_ELEMENT"]], "insert_value (pyqir.opcode attribute)": [[1, "pyqir.Opcode.INSERT_VALUE"]], "internal (pyqir.linkage attribute)": [[1, "pyqir.Linkage.INTERNAL"]], "int_to_ptr (pyqir.opcode attribute)": [[1, "pyqir.Opcode.INT_TO_PTR"]], "invoke (pyqir.opcode attribute)": [[1, "pyqir.Opcode.INVOKE"]], "instruction (class in pyqir)": [[1, "pyqir.Instruction"]], "intconstant (class in pyqir)": [[1, "pyqir.IntConstant"]], "intpredicate (class in pyqir)": [[1, "pyqir.IntPredicate"]], "inttype (class in pyqir)": [[1, "pyqir.IntType"]], "landing_pad (pyqir.opcode attribute)": [[1, "pyqir.Opcode.LANDING_PAD"]], "link_once_any (pyqir.linkage attribute)": [[1, "pyqir.Linkage.LINK_ONCE_ANY"]], "link_once_odr (pyqir.linkage attribute)": [[1, "pyqir.Linkage.LINK_ONCE_ODR"]], "load (pyqir.opcode attribute)": [[1, "pyqir.Opcode.LOAD"]], "lshr (pyqir.opcode attribute)": [[1, "pyqir.Opcode.LSHR"]], "linkage (class in pyqir)": [[1, "pyqir.Linkage"]], "max (pyqir.moduleflagbehavior attribute)": [[1, "pyqir.ModuleFlagBehavior.MAX"]], "mul (pyqir.opcode attribute)": [[1, "pyqir.Opcode.MUL"]], "metadata (class in pyqir)": [[1, "pyqir.Metadata"]], "metadatastring (class in pyqir)": [[1, "pyqir.MetadataString"]], "module (class in pyqir)": [[1, "pyqir.Module"]], "moduleflagbehavior (class in pyqir)": [[1, "pyqir.ModuleFlagBehavior"]], "ne (pyqir.intpredicate attribute)": [[1, "pyqir.IntPredicate.NE"]], "oeq (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.OEQ"]], "oge (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.OGE"]], "ogt (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.OGT"]], "ole (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.OLE"]], "olt (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.OLT"]], "one (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.ONE"]], "or (pyqir.opcode attribute)": [[1, "pyqir.Opcode.OR"]], "ord (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.ORD"]], "override (pyqir.moduleflagbehavior attribute)": [[1, "pyqir.ModuleFlagBehavior.OVERRIDE"]], "opcode (class in pyqir)": [[1, "pyqir.Opcode"]], "phi (pyqir.opcode attribute)": [[1, "pyqir.Opcode.PHI"]], "private (pyqir.linkage attribute)": [[1, "pyqir.Linkage.PRIVATE"]], "ptr_to_int (pyqir.opcode attribute)": [[1, "pyqir.Opcode.PTR_TO_INT"]], "phi (class in pyqir)": [[1, "pyqir.Phi"]], "pointertype (class in pyqir)": [[1, "pyqir.PointerType"]], "require (pyqir.moduleflagbehavior attribute)": [[1, "pyqir.ModuleFlagBehavior.REQUIRE"]], "resume (pyqir.opcode attribute)": [[1, "pyqir.Opcode.RESUME"]], "ret (pyqir.opcode attribute)": [[1, "pyqir.Opcode.RET"]], "sdiv (pyqir.opcode attribute)": [[1, "pyqir.Opcode.SDIV"]], "select (pyqir.opcode attribute)": [[1, "pyqir.Opcode.SELECT"]], "sext (pyqir.opcode attribute)": [[1, "pyqir.Opcode.SEXT"]], "sge (pyqir.intpredicate attribute)": [[1, "pyqir.IntPredicate.SGE"]], "sgt (pyqir.intpredicate attribute)": [[1, "pyqir.IntPredicate.SGT"]], "shl (pyqir.opcode attribute)": [[1, "pyqir.Opcode.SHL"]], "shuffle_vector (pyqir.opcode attribute)": [[1, "pyqir.Opcode.SHUFFLE_VECTOR"]], "si_to_fp (pyqir.opcode attribute)": [[1, "pyqir.Opcode.SI_TO_FP"]], "sle (pyqir.intpredicate attribute)": [[1, "pyqir.IntPredicate.SLE"]], "slt (pyqir.intpredicate attribute)": [[1, "pyqir.IntPredicate.SLT"]], "srem (pyqir.opcode attribute)": [[1, "pyqir.Opcode.SREM"]], "store (pyqir.opcode attribute)": [[1, "pyqir.Opcode.STORE"]], "sub (pyqir.opcode attribute)": [[1, "pyqir.Opcode.SUB"]], "switch (pyqir.opcode attribute)": [[1, "pyqir.Opcode.SWITCH"]], "simplemodule (class in pyqir)": [[1, "pyqir.SimpleModule"]], "structtype (class in pyqir)": [[1, "pyqir.StructType"]], "switch (class in pyqir)": [[1, "pyqir.Switch"]], "true (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.TRUE"]], "trunc (pyqir.opcode attribute)": [[1, "pyqir.Opcode.TRUNC"]], "type (class in pyqir)": [[1, "pyqir.Type"]], "udiv (pyqir.opcode attribute)": [[1, "pyqir.Opcode.UDIV"]], "ueq (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.UEQ"]], "uge (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.UGE"]], "uge (pyqir.intpredicate attribute)": [[1, "pyqir.IntPredicate.UGE"]], "ugt (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.UGT"]], "ugt (pyqir.intpredicate attribute)": [[1, "pyqir.IntPredicate.UGT"]], "ui_to_fp (pyqir.opcode attribute)": [[1, "pyqir.Opcode.UI_TO_FP"]], "ule (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.ULE"]], "ule (pyqir.intpredicate attribute)": [[1, "pyqir.IntPredicate.ULE"]], "ult (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.ULT"]], "ult (pyqir.intpredicate attribute)": [[1, "pyqir.IntPredicate.ULT"]], "une (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.UNE"]], "uno (pyqir.floatpredicate attribute)": [[1, "pyqir.FloatPredicate.UNO"]], "unreachable (pyqir.opcode attribute)": [[1, "pyqir.Opcode.UNREACHABLE"]], "urem (pyqir.opcode attribute)": [[1, "pyqir.Opcode.UREM"]], "user_op_1 (pyqir.opcode attribute)": [[1, "pyqir.Opcode.USER_OP_1"]], "user_op_2 (pyqir.opcode attribute)": [[1, "pyqir.Opcode.USER_OP_2"]], "va_arg (pyqir.opcode attribute)": [[1, "pyqir.Opcode.VA_ARG"]], "value (class in pyqir)": [[1, "pyqir.Value"]], "warning (pyqir.moduleflagbehavior attribute)": [[1, "pyqir.ModuleFlagBehavior.WARNING"]], "weak_any (pyqir.linkage attribute)": [[1, "pyqir.Linkage.WEAK_ANY"]], "weak_odr (pyqir.linkage attribute)": [[1, "pyqir.Linkage.WEAK_ODR"]], "xor (pyqir.opcode attribute)": [[1, "pyqir.Opcode.XOR"]], "zext (pyqir.opcode attribute)": [[1, "pyqir.Opcode.ZEXT"]], "add() (pyqir.builder method)": [[1, "pyqir.Builder.add"]], "add_byte_string() (pyqir.simplemodule method)": [[1, "pyqir.SimpleModule.add_byte_string"]], "add_external_function() (pyqir.simplemodule method)": [[1, "pyqir.SimpleModule.add_external_function"]], "add_flag() (pyqir.module method)": [[1, "pyqir.Module.add_flag"]], "add_incoming() (pyqir.phi method)": [[1, "pyqir.Phi.add_incoming"]], "add_string_attribute() (in module pyqir)": [[1, "pyqir.add_string_attribute"]], "address_space (pyqir.pointertype attribute)": [[1, "pyqir.PointerType.address_space"]], "and_() (pyqir.builder method)": [[1, "pyqir.Builder.and_"]], "args (pyqir.call attribute)": [[1, "pyqir.Call.args"]], "attributes (pyqir.function attribute)": [[1, "pyqir.Function.attributes"]], "basic_blocks (pyqir.function attribute)": [[1, "pyqir.Function.basic_blocks"]], "bitcode (pyqir.module attribute)": [[1, "pyqir.Module.bitcode"]], "bitcode() (pyqir.simplemodule method)": [[1, "pyqir.SimpleModule.bitcode"]], "br() (pyqir.builder method)": [[1, "pyqir.Builder.br"]], "builder (pyqir.simplemodule property)": [[1, "pyqir.SimpleModule.builder"]], "call() (pyqir.builder method)": [[1, "pyqir.Builder.call"]], "callee (pyqir.call attribute)": [[1, "pyqir.Call.callee"]], "cases (pyqir.switch attribute)": [[1, "pyqir.Switch.cases"]], "cond (pyqir.switch attribute)": [[1, "pyqir.Switch.cond"]], "condbr() (pyqir.builder method)": [[1, "pyqir.Builder.condbr"]], "const() (in module pyqir)": [[1, "pyqir.const"]], "context (pyqir.module attribute)": [[1, "pyqir.Module.context"]], "context (pyqir.simplemodule property)": [[1, "pyqir.SimpleModule.context"]], "count (pyqir.arraytype attribute)": [[1, "pyqir.ArrayType.count"]], "cx() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.cx"]], "cz() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.cz"]], "default (pyqir.switch attribute)": [[1, "pyqir.Switch.default"]], "double() (pyqir.type static method)": [[1, "pyqir.Type.double"]], "dynamic_qubit_management() (in module pyqir)": [[1, "pyqir.dynamic_qubit_management"]], "dynamic_result_management() (in module pyqir)": [[1, "pyqir.dynamic_result_management"]], "element (pyqir.arraytype attribute)": [[1, "pyqir.ArrayType.element"]], "entry_block (pyqir.simplemodule property)": [[1, "pyqir.SimpleModule.entry_block"]], "entry_point (pyqir.simplemodule property)": [[1, "pyqir.SimpleModule.entry_point"]], "entry_point() (in module pyqir)": [[1, "pyqir.entry_point"]], "erase() (pyqir.instruction method)": [[1, "pyqir.Instruction.erase"]], "extract_byte_string() (in module pyqir)": [[1, "pyqir.extract_byte_string"]], "fields (pyqir.structtype attribute)": [[1, "pyqir.StructType.fields"]], "from_bitcode() (pyqir.module static method)": [[1, "pyqir.Module.from_bitcode"]], "from_ir() (pyqir.module static method)": [[1, "pyqir.Module.from_ir"]], "func (pyqir.attributelist attribute)": [[1, "pyqir.AttributeList.func"]], "functions (pyqir.module attribute)": [[1, "pyqir.Module.functions"]], "get_flag() (pyqir.module method)": [[1, "pyqir.Module.get_flag"]], "global_byte_string() (in module pyqir)": [[1, "pyqir.global_byte_string"]], "h() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.h"]], "icmp() (pyqir.builder method)": [[1, "pyqir.Builder.icmp"]], "if_() (pyqir.builder method)": [[1, "pyqir.Builder.if_"]], "if_result() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.if_result"]], "incoming (pyqir.phi attribute)": [[1, "pyqir.Phi.incoming"]], "insert_at_end() (pyqir.builder method)": [[1, "pyqir.Builder.insert_at_end"]], "instructions (pyqir.basicblock attribute)": [[1, "pyqir.BasicBlock.instructions"]], "ir() (pyqir.simplemodule method)": [[1, "pyqir.SimpleModule.ir"]], "is_double (pyqir.type attribute)": [[1, "pyqir.Type.is_double"]], "is_entry_point() (in module pyqir)": [[1, "pyqir.is_entry_point"]], "is_interop_friendly() (in module pyqir)": [[1, "pyqir.is_interop_friendly"]], "is_null (pyqir.constant attribute)": [[1, "pyqir.Constant.is_null"]], "is_qubit_type() (in module pyqir)": [[1, "pyqir.is_qubit_type"]], "is_result_type() (in module pyqir)": [[1, "pyqir.is_result_type"]], "is_void (pyqir.type attribute)": [[1, "pyqir.Type.is_void"]], "lshr() (pyqir.builder method)": [[1, "pyqir.Builder.lshr"]], "module": [[1, "module-pyqir"]], "mul() (pyqir.builder method)": [[1, "pyqir.Builder.mul"]], "mz() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.mz"]], "name (pyqir.structtype attribute)": [[1, "pyqir.StructType.name"]], "name (pyqir.value attribute)": [[1, "pyqir.Value.name"]], "null() (pyqir.constant static method)": [[1, "pyqir.Constant.null"]], "opcode (pyqir.instruction attribute)": [[1, "pyqir.Instruction.opcode"]], "operands (pyqir.instruction attribute)": [[1, "pyqir.Instruction.operands"]], "or_() (pyqir.builder method)": [[1, "pyqir.Builder.or_"]], "param() (pyqir.attributelist method)": [[1, "pyqir.AttributeList.param"]], "params (pyqir.function attribute)": [[1, "pyqir.Function.params"]], "params (pyqir.functiontype attribute)": [[1, "pyqir.FunctionType.params"]], "phi() (pyqir.builder method)": [[1, "pyqir.Builder.phi"]], "pointee (pyqir.pointertype attribute)": [[1, "pyqir.PointerType.pointee"]], "predicate (pyqir.fcmp attribute)": [[1, "pyqir.FCmp.predicate"]], "predicate (pyqir.icmp attribute)": [[1, "pyqir.ICmp.predicate"]], "pyqir": [[1, "module-pyqir"]], "qir_major_version() (in module pyqir)": [[1, "pyqir.qir_major_version"]], "qir_minor_version() (in module pyqir)": [[1, "pyqir.qir_minor_version"]], "qir_module() (in module pyqir)": [[1, "pyqir.qir_module"]], "qubit() (in module pyqir)": [[1, "pyqir.qubit"]], "qubit_id() (in module pyqir)": [[1, "pyqir.qubit_id"]], "qubit_type() (in module pyqir)": [[1, "pyqir.qubit_type"]], "qubits (pyqir.simplemodule property)": [[1, "pyqir.SimpleModule.qubits"]], "required_num_qubits() (in module pyqir)": [[1, "pyqir.required_num_qubits"]], "required_num_results() (in module pyqir)": [[1, "pyqir.required_num_results"]], "reset() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.reset"]], "result() (in module pyqir)": [[1, "pyqir.result"]], "result_id() (in module pyqir)": [[1, "pyqir.result_id"]], "result_type() (in module pyqir)": [[1, "pyqir.result_type"]], "results (pyqir.simplemodule property)": [[1, "pyqir.SimpleModule.results"]], "ret (pyqir.attributelist attribute)": [[1, "pyqir.AttributeList.ret"]], "ret (pyqir.functiontype attribute)": [[1, "pyqir.FunctionType.ret"]], "ret() (pyqir.builder method)": [[1, "pyqir.Builder.ret"]], "rx() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.rx"]], "ry() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.ry"]], "rz() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.rz"]], "s() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.s"]], "s_adj() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.s_adj"]], "shl() (pyqir.builder method)": [[1, "pyqir.Builder.shl"]], "source_filename (pyqir.module attribute)": [[1, "pyqir.Module.source_filename"]], "string_kind (pyqir.attribute attribute)": [[1, "pyqir.Attribute.string_kind"]], "string_value (pyqir.attribute attribute)": [[1, "pyqir.Attribute.string_value"]], "sub() (pyqir.builder method)": [[1, "pyqir.Builder.sub"]], "successors (pyqir.instruction attribute)": [[1, "pyqir.Instruction.successors"]], "t() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.t"]], "t_adj() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.t_adj"]], "terminator (pyqir.basicblock attribute)": [[1, "pyqir.BasicBlock.terminator"]], "type (pyqir.function attribute)": [[1, "pyqir.Function.type"]], "type (pyqir.value attribute)": [[1, "pyqir.Value.type"]], "value (pyqir.constantasmetadata attribute)": [[1, "pyqir.ConstantAsMetadata.value"]], "value (pyqir.floatconstant attribute)": [[1, "pyqir.FloatConstant.value"]], "value (pyqir.intconstant attribute)": [[1, "pyqir.IntConstant.value"]], "value (pyqir.metadatastring attribute)": [[1, "pyqir.MetadataString.value"]], "verify() (pyqir.module method)": [[1, "pyqir.Module.verify"]], "void() (pyqir.type static method)": [[1, "pyqir.Type.void"]], "width (pyqir.inttype attribute)": [[1, "pyqir.IntType.width"]], "x() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.x"]], "xor() (pyqir.builder method)": [[1, "pyqir.Builder.xor"]], "y() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.y"]], "z() (pyqir.basicqisbuilder method)": [[1, "pyqir.BasicQisBuilder.z"]]}})